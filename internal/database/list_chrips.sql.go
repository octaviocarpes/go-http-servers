// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: list_chrips.sql

package database

import (
	"context"
	"database/sql"
)

const listChirps = `-- name: ListChirps :many
SELECT id, body, user_id, created_at, updated_at
FROM chirps
WHERE user_id = COALESCE($2, user_id)
ORDER BY
    CASE WHEN $1 THEN created_at END ASC,
    CASE WHEN $1 = FALSE THEN created_at END DESC
`

type ListChirpsParams struct {
	Column1  interface{}
	AuthorID sql.NullString
}

func (q *Queries) ListChirps(ctx context.Context, arg ListChirpsParams) ([]Chirp, error) {
	rows, err := q.db.QueryContext(ctx, listChirps, arg.Column1, arg.AuthorID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Chirp
	for rows.Next() {
		var i Chirp
		if err := rows.Scan(
			&i.ID,
			&i.Body,
			&i.UserID,
			&i.CreatedAt,
			&i.UpdatedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
